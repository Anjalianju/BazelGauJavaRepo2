bazel_dep(name = "rules_jvm_external", version = "5.3")

# To update maven dependencies, update the lines below and then run:
# bazel run @unpinned_maven//:pin
maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        # Command line arg parsing
        "com.beust:jcommander:1.82",
        "com.fasterxml.jackson.core:jackson-databind:2.16.1",
        "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.16.1",
        "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.16.1",
        "com.google.code.findbugs:jsr305:3.0.2",
        "com.google.dagger:dagger-compiler:2.51",
        "com.google.dagger:dagger-producers:2.51",
        "com.google.dagger:dagger-spi:2.51",
        "com.google.dagger:dagger:2.51",
        "com.google.googlejavaformat:google-java-format:1.20.0",
        "com.google.guava:guava:33.0.0-jre",
        # Test Filesystem
        "com.google.jimfs:jimfs:1.3.0",
        # For REST services
        "io.javalin:javalin:5.6.4",
        "javax.inject:javax.inject:1",
        "junit:junit:4.13.2",
        "org.apache.commons:commons-lang3:3.14.0",
        # Logger dependencies
        "org.apache.logging.log4j:log4j-core:2.23.0",
        "org.apache.logging.log4j:log4j-slf4j2-impl:2.23.0",
        # Fluent test assertions
        "org.assertj:assertj-core:3.25.3",
        # JMH microbenchmarking
        "org.openjdk.jmh:jmh-core:1.37",
        "org.openjdk.jmh:jmh-generator-annprocess:1.37",
        # OpenTelemetry
        "io.opentelemetry:opentelemetry-api:1.35.0",
        "io.opentelemetry:opentelemetry-sdk:1.35.0",
    ],
    lock_file = "//:maven_install.json",
    repositories = [
        "https://repo1.maven.org/maven2",
        "https://maven.google.com",
    ],
)
use_repo(maven, "maven", "unpinned_maven")

# Buildifier
bazel_dep(
    name = "buildifier_prebuilt",
    version = "6.4.0",
    dev_dependency = True,
)

# rules_oci
bazel_dep(name = "aspect_bazel_lib", version = "2.5.0")
bazel_dep(name = "container_structure_test", version = "1.16.0")
bazel_dep(name = "rules_oci", version = "1.7.2")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_java",
    digest = "sha256:161a1d97d592b3f1919801578c3a47c8e932071168a96267698f4b669c24c76d",
    image = "gcr.io/distroless/java17",
    #platforms = ["linux/arm64"],
)
use_repo(oci, "distroless_java")

# rules_pkg (for creating .tar files, required by rules_oci)
bazel_dep(name = "rules_pkg", version = "0.10.1")
